name: 🚀 Deploy to Minatoz997/Backend66

on:
  # Auto deploy on push to main branch
  push:
    branches: [ main ]
    paths:
      - 'app.py'
      - 'requirements.txt'
      - 'Dockerfile'
      - 'README.md'
      - 'start.sh'
      - '.github/workflows/deploy-hf.yml'
  
  # Manual trigger option
  workflow_dispatch:
    inputs:
      clean_deploy:
        description: 'Clean deploy (remove all files first)'
        required: true
        default: true
        type: boolean
      hf_token:
        description: 'HF Token (or use HF_TOKEN secret)'
        required: false
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install dependencies
      run: |
        pip install --upgrade pip
        pip install huggingface_hub
        # Install minimal dependencies to avoid import errors during deployment
        pip install fastapi uvicorn python-multipart python-dotenv
        pip install litellm aiohttp httpx
        pip install termcolor toml numpy json-repair html2text
        
    - name: 🔍 Pre-deployment validation
      run: |
        echo "🔍 Checking for import issues..."
        echo "📁 Current directory: $(pwd)"
        echo "📋 Files in directory:"
        ls -la
        echo ""
        echo "🐍 Testing Python imports..."
        python -c "
        import sys
        import os
        
        # Test critical imports
        try:
            import fastapi
            import uvicorn
            import litellm
            import huggingface_hub
            print('✅ Core dependencies OK')
        except ImportError as e:
            print(f'❌ Core dependency error: {e}')
            sys.exit(1)
        
        # Check deploy script exists
        if os.path.exists('deploy_to_hf.py'):
            print('✅ deploy_to_hf.py exists')
        else:
            print('❌ deploy_to_hf.py missing')
            sys.exit(1)
        
        # Test app.py imports (without running the server)
        try:
            # Add current directory to path
            sys.path.insert(0, '.')
            
            # Set minimal environment to avoid startup issues
            os.environ['DISABLE_SECURITY'] = 'true'
            os.environ['SETTINGS_STORE_TYPE'] = 'memory'
            
            # Test import without running
            import app
            print('✅ app.py imports successfully')
        except Exception as e:
            print(f'⚠️  app.py import warning: {e}')
            # Don't fail deployment for warnings
        
        print('🎯 Pre-deployment validation complete')
        "
        
    - name: 🧹 Clean deploy to Minatoz997/Backend66 (Manual)
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.clean_deploy }}
      env:
        HF_TOKEN: ${{ inputs.hf_token || secrets.HF_TOKEN }}
      run: |
        python deploy_to_hf.py --space-name "Minatoz997/Backend66"
        
    - name: 🚀 Auto deploy to Minatoz997/Backend66 (Push to main)
      if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && !inputs.clean_deploy) }}
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        echo "🚀 AUTO DEPLOY: Clean deploy essential files only"
        echo "🔄 Triggered by: ${{ github.event_name }}"
        echo "📝 Commit: ${{ github.sha }}"
        echo "⏰ Time: $(date)"
        echo ""
        
        # Use the same clean deploy script as manual
        python deploy_to_hf.py --space-name "Minatoz997/Backend66"
        
    - name: ✅ Deployment complete
      run: |
        echo "🎉 Deployment to Minatoz997/Backend66 successful!"
        echo "🌐 Your space: https://huggingface.co/spaces/Minatoz997/Backend66"
        echo "📊 Logs: https://huggingface.co/spaces/Minatoz997/Backend66?logs=container"
        echo "⏱️  Build will start automatically (5-10 minutes)"
        echo ""
        echo "🔧 NEXT STEPS:"
        echo "1. Go to: https://huggingface.co/spaces/Minatoz997/Backend66/settings"
        echo "2. Set environment variables:"
        echo "   - LLM_API_KEY=your_openrouter_key"
        echo "   - PERSONAL_ACCESS_TOKEN=backend-for-us-2024"
        echo "3. Wait for build to complete"
        echo "4. Test: https://minatoz997-backend66.hf.space/health"
        echo ""
        echo "💕 Enjoy your clean personal AI backend!"
